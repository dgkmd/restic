package walker

import (
	"testing"
)

// TODO: implement two test functions, TestRechunker and TestRewriter.

// TestRechunker:
// Generate random files of various size (refer to archiver_test.go).
// Optionally include duplicate files.
// Chooose two arbitrary chunker polynomials (src and dst).
// Create test nodes. It suffices to have name, nodeType and content field.
// At preparation, chunk files by each of the two polynomials.
// Keep src chunks at mock LoadBlob (srcRepo), put src blob IDs in content fields,
// and put dst blob IDs in SaveBlob (dstRepo).
// wants: dstRepo to have all dst blobs computed from dst polynomials.

// TestRewriter:
// Generate arbitrary tree hierarchy that consists of various node types.
// Also include various metadata to test metadata preservation.
// Prepare mock rechunkBlobsMap. (It doesn't have to be generated by real chunking)
// wants: dstRepo to have all tree blobs that are expected (substitued contents).
// Also include expected fail test case, in which a file with no matching key in rechunkBlobsMap exists.
// Number of dst blobs: max(round(an+b), 1), 
// where n: number of src blobs, a~Uniform(0.9, 1.1) and b~Uniform(-2.0, 2.0).
// And each blob ID should be randomly generated 32 bytes string (SHA256 format).